/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl2.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl2.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl2.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDictionaryEntryAccess().getAlternatives(), "rule__DictionaryEntry__Alternatives");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getAlternatives(), "rule__OtherOperationStatement__Alternatives");
			builder.put(grammarAccess.getTaskDictionaryEntryAccess().getAlternatives_2(), "rule__TaskDictionaryEntry__Alternatives_2");
			builder.put(grammarAccess.getOperationAccess().getAlternatives(), "rule__Operation__Alternatives");
			builder.put(grammarAccess.getFieldTypeAccess().getAlternatives(), "rule__FieldType__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getOperationStatementAccess().getGroup(), "rule__OperationStatement__Group__0");
			builder.put(grammarAccess.getConnectionStatementAccess().getGroup_0(), "rule__ConnectionStatement__Group_0__0");
			builder.put(grammarAccess.getConnectionStatementAccess().getGroup_1(), "rule__ConnectionStatement__Group_1__0");
			builder.put(grammarAccess.getMakeStatementAccess().getGroup(), "rule__MakeStatement__Group__0");
			builder.put(grammarAccess.getMakeStatementAccess().getGroup_3(), "rule__MakeStatement__Group_3__0");
			builder.put(grammarAccess.getMakeStatementAccess().getGroup_3_1(), "rule__MakeStatement__Group_3_1__0");
			builder.put(grammarAccess.getDictionaryEntryAccess().getGroup_0(), "rule__DictionaryEntry__Group_0__0");
			builder.put(grammarAccess.getDictionaryEntryAccess().getGroup_1(), "rule__DictionaryEntry__Group_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_0(), "rule__OtherOperationStatement__Group_0__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_0_1(), "rule__OtherOperationStatement__Group_0_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_0_1_8(), "rule__OtherOperationStatement__Group_0_1_8__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_0_1_8_1(), "rule__OtherOperationStatement__Group_0_1_8_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1(), "rule__OtherOperationStatement__Group_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1(), "rule__OtherOperationStatement__Group_1_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1_7(), "rule__OtherOperationStatement__Group_1_1_7__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1_7_1(), "rule__OtherOperationStatement__Group_1_1_7_1__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1_9(), "rule__OtherOperationStatement__Group_1_1_9__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1_9_3(), "rule__OtherOperationStatement__Group_1_1_9_3__0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getGroup_1_1_9_3_1(), "rule__OtherOperationStatement__Group_1_1_9_3_1__0");
			builder.put(grammarAccess.getTaskDictionaryEntryAccess().getGroup(), "rule__TaskDictionaryEntry__Group__0");
			builder.put(grammarAccess.getMongoDBAccess().getModelsAssignment(), "rule__MongoDB__ModelsAssignment");
			builder.put(grammarAccess.getModelAccess().getConnectionAssignment_0(), "rule__Model__ConnectionAssignment_0");
			builder.put(grammarAccess.getModelAccess().getStatementsAssignment_1(), "rule__Model__StatementsAssignment_1");
			builder.put(grammarAccess.getOperationStatementAccess().getSchemaAssignment_0(), "rule__OperationStatement__SchemaAssignment_0");
			builder.put(grammarAccess.getOperationStatementAccess().getOperationsAssignment_1(), "rule__OperationStatement__OperationsAssignment_1");
			builder.put(grammarAccess.getConnectionStatementAccess().getConnectionStringAssignment_0_3(), "rule__ConnectionStatement__ConnectionStringAssignment_0_3");
			builder.put(grammarAccess.getConnectionStatementAccess().getDatabaseAssignment_1_1(), "rule__ConnectionStatement__DatabaseAssignment_1_1");
			builder.put(grammarAccess.getMakeStatementAccess().getNameAssignment_1(), "rule__MakeStatement__NameAssignment_1");
			builder.put(grammarAccess.getMakeStatementAccess().getEntriesAssignment_3_0(), "rule__MakeStatement__EntriesAssignment_3_0");
			builder.put(grammarAccess.getMakeStatementAccess().getEntriesAssignment_3_1_1(), "rule__MakeStatement__EntriesAssignment_3_1_1");
			builder.put(grammarAccess.getDictionaryEntryAccess().getNameAssignment_0_0(), "rule__DictionaryEntry__NameAssignment_0_0");
			builder.put(grammarAccess.getDictionaryEntryAccess().getFieldTypeAssignment_0_2(), "rule__DictionaryEntry__FieldTypeAssignment_0_2");
			builder.put(grammarAccess.getDictionaryEntryAccess().getStatusAssignment_0_3(), "rule__DictionaryEntry__StatusAssignment_0_3");
			builder.put(grammarAccess.getDictionaryEntryAccess().getUniqueKeyAssignment_0_4(), "rule__DictionaryEntry__UniqueKeyAssignment_0_4");
			builder.put(grammarAccess.getDictionaryEntryAccess().getNameAssignment_1_0(), "rule__DictionaryEntry__NameAssignment_1_0");
			builder.put(grammarAccess.getDictionaryEntryAccess().getRefDictionaryAssignment_1_3(), "rule__DictionaryEntry__RefDictionaryAssignment_1_3");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getTypeAssignment_0_1_2(), "rule__OtherOperationStatement__TypeAssignment_0_1_2");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getCollectionAssignment_0_1_5(), "rule__OtherOperationStatement__CollectionAssignment_0_1_5");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_0_1_8_0(), "rule__OtherOperationStatement__EntriesAssignment_0_1_8_0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_0_1_8_1_1(), "rule__OtherOperationStatement__EntriesAssignment_0_1_8_1_1");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getTypeAssignment_1_1_2(), "rule__OtherOperationStatement__TypeAssignment_1_1_2");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getCollectionAssignment_1_1_4(), "rule__OtherOperationStatement__CollectionAssignment_1_1_4");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_1_1_7_0(), "rule__OtherOperationStatement__EntriesAssignment_1_1_7_0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_1_1_7_1_1(), "rule__OtherOperationStatement__EntriesAssignment_1_1_7_1_1");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_1_1_9_3_0(), "rule__OtherOperationStatement__EntriesAssignment_1_1_9_3_0");
			builder.put(grammarAccess.getOtherOperationStatementAccess().getEntriesAssignment_1_1_9_3_1_1(), "rule__OtherOperationStatement__EntriesAssignment_1_1_9_3_1_1");
			builder.put(grammarAccess.getTaskDictionaryEntryAccess().getValueNameAssignment_0(), "rule__TaskDictionaryEntry__ValueNameAssignment_0");
			builder.put(grammarAccess.getTaskDictionaryEntryAccess().getValueStringAssignment_2_0(), "rule__TaskDictionaryEntry__ValueStringAssignment_2_0");
			builder.put(grammarAccess.getTaskDictionaryEntryAccess().getValueIntAssignment_2_1(), "rule__TaskDictionaryEntry__ValueIntAssignment_2_1");
			builder.put(grammarAccess.getConnectionStatementAccess().getUnorderedGroup(), "rule__ConnectionStatement__UnorderedGroup");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
