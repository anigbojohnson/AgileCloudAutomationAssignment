/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl1.validation;

import org.eclipse.xtext.validation.Check;
import org.xtext.example.mydsl1.myDsl.DictionaryEntry;
import org.xtext.example.mydsl1.myDsl.MakeStatement;
import org.xtext.example.mydsl1.myDsl.MyDslPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class MyDslValidator extends AbstractMyDslValidator {
	
//	public static final String INVALID_NAME = "invalidName";
//
//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital",
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME);
//		}
//	}
	   @Check
	    public void checkNoSelfReference(MakeStatement make) {
	        for (DictionaryEntry entry : make.getEntries()) {
	            if (entry.getRefDictionary() != null && entry.getRefDictionary().getName().equals(make.getName())) {
	                error("A collection cannot reference itself.", MyDslPackage.Literals.MAKE_STATEMENT__NAME);
	            }
	        }
	    }
	    @Check
	    public void validateCollectionName(MakeStatement entry) {
	        // Check the dictionary name
	    	
	    	String name = entry.getName();
	        if (name != null && !name.isEmpty()) {
	            char firstChar = name.charAt(0);
	            if (!Character.isUpperCase(firstChar)) {
	                warning("collection name should start with an uppercase letter",
		                    MyDslPackage.Literals.MAKE_STATEMENT__NAME);
	            }
	        }
	    }
	    @Check
	    public void checkAttributeNameStartsWithLowercase(DictionaryEntry attr) {
	        if (!Character.isLowerCase(attr.getName().charAt(0))) {
	            warning("collection attribute name should start with a lowercase",
	            		MyDslPackage.Literals.DICTIONARY_ENTRY__NAME);
	        }
	    }
}
